TODAY:


QUESTIONS:
* Il faut annoter touts les événements, et pas seulement ceux qui sont liés par
  les relations temporelles, n'est-ce pas?


TODO:
* Mark an event
* When a node is deleted, the corresponding links should be deleted as well!
* FS editing for an event
* Check if in your code, "display = flex" is used for something
* Make the connections show depending on which window is in focus
* Based on the elm-lang online editor (see e.g.
  http://elm-lang.org/examples/websockets), make it possible to drag the edges
  of the editing windows.
* Mark non-projective trees "en rouge/rose"
* Side menu item which allows to switch to which window (top or bottom) the given
  side window corresponds.


LATER:
* Improve indentation when editing elm files


CANCELLED:
* Show a sentence on top of a given viewport <- a different solution was used


DONE:
* Make dragging independent in both windows
* Make it possible to work with several trees
* Make one of the windows focused
* Make it possible to switch between trees
* Show the tree id
* Make selection tree-dependent
* Rose trees with actual words
* Make it possible to modify node labels
* Make drawing artefacts disappear
* Better code organization in the View module
* Delete chosen node(s), provided that they are not roots
* Add common parent to a group of nodes
* Make the scrollbar on the bottom disappear
* Make the proportion between the two windows configurable
* Compute the absolute size of the entire window
* Make it possible to focus on the edit field
* A function which returns a position of the node with
  a given ID in a given tree.  Once you have it, it should
  be possible to draw a line between two positions.
* Simplify how the positions and grabbing are handled
* Simplify the way positions in the trees are calculated
* Simplify some functions related to windows
* Show links in both directions, unless the same tree ID
* Do not show links if they go beyond the windows
* Make the text in the main windows non-selectable
* Update the style of links
* Simplify Model.moveCursor
* Distinguish main selected node from auxiliary selected nodes
* Make it possible to link two nodes in two viewports
* Make the order of the terminal nodes explicit and distinguish terminal from
  non-terminal nodes
* Attach a subtree to different node
* Attach a subtree to different node: bug! try attaching VN to a dot...
* Make a simple websocket connection with a Haskell websockets server
* Provisional: make it possible to load a tree from a server
* Navigation between the files (menu) window and the editing window
* Store on the server information about the links
* Make it possible to save a file
* Listen to websocket from top-level! Note that you send some request form the
  editing tree, too...
* Move implementation of the websocket communication from menu to top-level
* Improve re-attaching trees (sorting is done only on the tree being attached to)
* Show leaf ids in subscript (concerns non-projective trees) 
* Clicking on a sentence in the context should bring this sentence into view.
* Make it possible to change the horizontal proportions 
* Help menu
* Make a flat message window on the bottom <- using side windows instead
* Make it possible to swap a tree with its sister tree
* Key 'e' switches the side menu if need be
* Menu of the side menu with bold-font highlighting of the selected tab 
* Block keydown events propagation when editing 
* Correctly sort sentenes according to their treeIDs 

let
  Attr = ./Attr.typ
in let
  Anchor = Attr.Anchor
in
  { name = "SLink"
  
    -- Possible types; `relType` in ISO-TimeML
  , typ =
      { among =
        ["Intensional", "Factive", "CounterFactive", "Evidential", "NegEvidential"]
      , def = [] : Optional Text
      }
  
    -- Attributes
    --
    -- NOTE: the `eventID` and `subordinateEvent` ISO-TimeML attributes are
    -- represented by the relation's source and target nodes
  , attributes =
      [ { _1 = "Signal" -- `signalID` in ISO-TimeML
        , _2 = Anchor
        }
      ] : List {_1 : Text, _2 : Attr}

    -- Type-dependent attributes
  , attributesOnType = [] : List 
      { key : Text
      , val : List {_1 : Text, _2 : Attr} }
  } : ./Entity.typ

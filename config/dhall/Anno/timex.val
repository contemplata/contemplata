let
  Attr = ./Attr.typ
in let
  Free = Attr.Free
in let
  Closed = Attr.Closed
in let
  Anchor = Attr.Anchor
in
  { name = "Timex"
  
    -- Possible types
  , typ =
      { among = ["Date", "Time", "Duration", "Set"]
      , def = Some "Time"
      }
  
    -- Attributes
  , attributes =
      [ { name = "Calendar"
        , value = Closed
          { among = ["ISO", "Gregor", "Jour", "Unix", "RD", "Hebr", "Islam", "MayaCirc", "MayaLon", "Pers", "JulJD", "JulAN", "JulMOD", "Copt", "Ethiop", "Egypt", "Armen", "Ind", "HindSol", "HindSolAN", "HindLun", "HindLunAN", "Chinv", "Roman", "Revolut", "Postitiv", "Balines", "BahaiOcc", "BahaiFut", "Other"]
          , def = Some "ISO"
          , required = True }
        }
      , { name = "Function"
        , value = Closed
          { among = ["CreationTime", "ExpirationTime", "ModificationTime", "PublicationTime", "ReleaseTime", "ReceptionTime"]
          , def = None Text
          , required = False }
        }
      , { name = "Pred"
        , value = Free {def = None Text}
        }
      , { name = "TemporalFun"
        , value = Closed
          { among = ["S", "R"]
          , def = None Text
          , required = False }
        }
      , { name = "LingValue"
        , value = Free {def = None Text}
        }
      , { name = "Value"
        , value = Free {def = None Text}
        }
      , { name = "Mod"
        , value = Closed
          { among = ["Before", "After", "OnOrBefore", "OnOrAfter", "LessThan", "MoreThan", "EqualOrLess", "EqualOrMore", "StartX", "MidX", "EndX", "Approx"]
          , def = None Text
          , required = False }
        }
      , { name = "Anchor"
        , value = Anchor
        }
      ]

    -- Type-dependent attributes
  , attributesOnType =
      [ { typ = "Duration"
        , attributes =
          [ { name = "Begin"
            , value = Anchor
            }
          , { name = "End"
            , value = Anchor
            }
          ]
	}
      , { typ = "Set"
        , attributes =
          [ { name = "Quant"
            , value = Free {def = None Text}
            }
          , { name = "Freq"
            , value = Free {def = None Text}
            }
          ]
	}
      ]
  } : ./Entity.typ
